"use strict";(self.webpackChunkhackfi_training=self.webpackChunkhackfi_training||[]).push([[832],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>d});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),m=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},p=function(e){var a=m(e.components);return t.createElement(s.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(r),d=n,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return r?t.createElement(g,i(i({ref:a},p),{},{components:r})):t.createElement(g,i({ref:a},p))}));function d(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7027:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var t=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2,title:"Solana Program Library",hide_title:!0,slug:"/smart-contracts/solana-spl"},i=void 0,l={unversionedId:"Smart-Contracts/solana-101/solana-program-library",id:"Smart-Contracts/solana-101/solana-program-library",title:"Solana Program Library",description:"Solana Program Library",source:"@site/docs/Smart-Contracts/solana-101/solana-program-library.md",sourceDirName:"Smart-Contracts/solana-101",slug:"/smart-contracts/solana-spl",permalink:"/multiversity/smart-contracts/solana-spl",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Solana Program Library",hide_title:!0,slug:"/smart-contracts/solana-spl"},sidebar:"tutorialSidebar",previous:{title:"Solana Programs",permalink:"/multiversity/smart-contracts/solana"},next:{title:"Vulnerabilities and Exploits \ud83d\udca3",permalink:"/multiversity/vulnerabilities-and-exploits"}},s={},m=[{value:"Solana Program Library",id:"solana-program-library",level:2},{value:"References",id:"references",level:2}],p={toc:m};function c(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"solana-program-library"},"Solana Program Library"),(0,n.kt)("p",null,"The Solana Program Library (SPL) is a collection of ",(0,n.kt)("inlineCode",{parentName:"p"},"on-chain")," programs targeting the ",(0,n.kt)("inlineCode",{parentName:"p"},"Sealevel parallel runtime"),". These are deployed and available on the mainnet. "),(0,n.kt)("p",null,"Available programs in the SPL:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Token Program"),": This program defines a common implementation for Fungible and Non Fungible tokens."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Token-2022 Program"),": A token program on the Solana blockchain, defining a common implementation for fungible and non-fungible tokens. The Token-2022 Program is a superset of the functionality provided by the Token Program, deployed to all networks."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Token Swap Program"),": A Uniswap-like exchange for the Token program on the Solana blockchain, implementing multiple automated market maker (AMM) curves."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Token-Lending Program"),": A lending protocol for the Token program on the Solana blockchain inspired by Aave and Compound."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Associated Token Account Program"),": This program defines the convention and provides the mechanism for mapping the user's wallet address to the associated token accounts they hold."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Token Upgrade Program"),": The Token Upgrade Program provides a stateless protocol for permanently converting tokens from one mint to another."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Memo Program"),": The Memo program is a simple program that validates a string of UTF-8 encoded characters and verifies that any accounts provided are signers of the transaction. "),(0,n.kt)("li",{parentName:"ul"},"Name Service: A SPL program for issuing and managing ownership of: domain names, Solana Pubkeys, URLs, Twitter handles, ipfs cid's etc.."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Shared memory Program"),": A simple program and highly optimized program that writes instruction data into the provided account's data"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Feature Proposal Program"),": The Feature Proposal Program provides a workflow for activation of Solana network features through community vote based on validator stake weight.")),(0,n.kt)("p",null,"SPL source code is available here: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/solana-program-library"},"solana-program-library")),(0,n.kt)("h2",{id:"references"},"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/coinmonks/solana-programs-part-1-understanding-spl-token-mint-fabd13323219"},"Solana programs Part 1: understanding SPL Token Mint")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/coinmonks/solana-programs-part-2-understanding-spl-associated-token-account-25082b9b5471"},"Solana programs Part 2: understanding SPL Associated Token Account")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/coinmonks/solana-programs-part-3-understanding-metaplex-token-metadata-3cafde284d72"},"Solana programs Part 3: understanding Metaplex Token Metadata")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://medium.com/coinmonks/solana-programs-part-4-metaplex-candy-machine-how-does-it-work-a27d7a133fad"},"Solana programs Part 4: Metaplex Candy Machine \u2014 how does it work?"))))}c.isMDXComponent=!0}}]);